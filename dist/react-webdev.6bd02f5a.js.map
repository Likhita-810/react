{"mappings":"AAAA,MAAM,UAAU,MAAM,aAAa,CAAC,MAAM,CAAC,GAAG;AAC9C,uDAAuD;AACvD,kDAAkD;AAElD,MAAM,OAAO,SAAS,UAAU,CAAC,SAAS,cAAc,CAAC;AACzD,sFAAsF;AAEtF,KAAK,MAAM,CAAC;AACZ,wHAAwH;AAExH,8BAA8B;AAC9B,MAAM,SAAS,MAAM,aAAa,CAAC,OAAM;IAAC,IAAI;AAAQ,GAClD;IAAC,MAAM,aAAa,CAChB,OACA;QAAC,IAAI;IAAO,GACZ;QAAC,MAAM,aAAa,CAAC,MAAK,CAAC,GAAE;QAC7B,MAAM,aAAa,CAAC,MAAK,CAAC,GAAE;KAC3B;IACL;QAAC,MAAM,aAAa,CAChB,OACA;YAAC,IAAI;QAAO,GACZ;YAAC,MAAM,aAAa,CAAC,MAAK,CAAC,GAAE;YAC7B,MAAM,aAAa,CAAC,MAAK,CAAC,GAAE;SAC3B;KACH;CACD;AAEL,wBAAwB;AACxB,KAAK,MAAM,CAAC;IAAC;IAAS;CAAO","sources":["App.js"],"sourcesContent":["const heading = React.createElement(\"h1\", {}, \"Hello World written via React!\");\r\n// created an ele, base react work, so React.cE is used\r\n// any attributes like id/class are taken inside{}\r\n            \r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\n// createting a root and which connects browser and the dev data, so ReactDOM is used.\r\n\r\nroot.render(heading);\r\n// like how we append child the tags to the root element we render the child created to the root elements using render()\r\n\r\n// creating a nested html body\r\nconst parent = React.createElement(\"div\",{id: \"parent\"},\r\n    [React.createElement(\r\n        \"div\",\r\n        {id: \"child\"},\r\n        [React.createElement(\"h1\",{},\"This is a h1 tag\"),\r\n        React.createElement(\"h2\",{},\"This is a h2 tag\")\r\n        ]),\r\n    [React.createElement(\r\n        \"div\",\r\n        {id: \"child\"},\r\n        [React.createElement(\"h1\",{},\"This is a h1 tag\"),\r\n        React.createElement(\"h2\",{},\"This is a h2 tag\")\r\n        ]\r\n    )],\r\n    ]\r\n);\r\n// root.render(heading);\r\nroot.render([heading, parent]);"],"names":[],"version":3,"file":"react-webdev.6bd02f5a.js.map","sourceRoot":"/__parcel_source_root/"}